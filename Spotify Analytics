# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First, I determined I determined who the Top 10 artists are by popularity. 
SELECT artist_name FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity DESC
LIMIT 10;

#Next, I determined the avg danceability by artist and track.
SELECT artist_name, track_name, avg(danceability) FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

#Then, I determined the longest song.
SELECT artist_name FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY duration_ms DESC
LIMIT 1;

#Next, I determined the danceability of the ten most popular songs.
SELECT popularity, track_name, avg(danceability) FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity DESC
LIMIT 10;

#Last, I created a new tag called "Top Star" to denote artists with popularity levels >90.
WITH popularity_average_CTE AS 
(SELECT s.artist_name, AVG(s.popularity) AS average_popularity FROM SpotifyData s 
GROUP BY s.artist_name)
 
SELECT artist_name, average_popularity, 'Top Star' AS tag FROM popularity_average_CTE
WHERE average_popularity>=90;
